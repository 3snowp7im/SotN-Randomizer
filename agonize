#!/usr/bin/env node

const os = require('os')
const worker_threads = require('worker_threads')

const args = require('yargs')
  .strict()
  .option('early-merman', {
    alias: 'm',
    describe: 'Allow early merman statue',
    type: 'boolean',
    default: false,
  })
  .option('threads', {
    alias: 't',
    describe: 'Number of threads to use',
    type: 'number',
    requiresArg: true,
    default: os.cpus().length,
  })
  .version(false)
  .help()
  .argv

async function agonize(workerCount) {
  const workers = []
  for (let i = 0; i < workerCount; i++) {
    const worker = new worker_threads.Worker('./agonize_worker.js', {
      workerData: args,
    })
    workers.push(worker)
  }
  const seed = await Promise.race(workers.map(function(worker) {
    return new Promise(function(resolve) {
      worker.on('message', resolve)
    })
  }))
  workers.forEach(function(worker) {
    worker.terminate()
  })
  return seed
}

agonize(args.threads).then(function(seed) {
  setTimeout(function() {
    console.log(seed)
  })
})
