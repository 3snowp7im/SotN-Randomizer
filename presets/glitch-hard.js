(function(self) {

  // Logic metadata.
  const metadata = {
    id: 'glitch-hard',
    name: 'Glitch (Hard)',
    description: [
      'Extensive glitch knowledge may be required for completion.',
      'Guaranteed Heart Refreshes in Entrance and the out of bounds candle.',
      'Guaranteed Claymore and Manna Prisms in Caverns.',
    ].join(' '),
    author: 'romscout',
  }

  // Boilerplate.
  let constants
  let util
  if (self) {
    constants = self.sotnRando.constants
    util = self.sotnRando.util
  } else {
    constants = require('../constants')
    util = require('../util')
  }
  const PresetBuilder = util.PresetBuilder
  const RELIC = constants.RELIC
  const SLOT = constants.SLOT
  const ZONE = constants.ZONE

  // Create PresetBuilder.
  const builder = new PresetBuilder(metadata)

  // STARTING EQUIPMENT //
  builder.startingEquipment(SLOT.RIGHT_HAND, 'Tyrfing')
  builder.startingEquipment(SLOT.LEFT_HAND, 'Leather Shield')
  builder.startingEquipment(SLOT.HEAD, 'Sunglasses')
  builder.startingEquipment(SLOT.BODY, 'Cloth Tunic')
  builder.startingEquipment(SLOT.CLOAK, 'Cloth Cape')
  builder.startingEquipment(SLOT.OTHER, 'Duplicator')
  builder.startingEquipment(SLOT.AXEARMOR, 'Gold Plate')
  builder.startingEquipment(SLOT.LUCK_MODE, 'Talisman')

  // ITEM LOCATIONS //
  // Heart Refresh in Pot Roast rock.
  builder.itemLocations(ZONE.NO3, 'Pot Roast', 'Heart Refresh')
  // 2nd Heart Refresh in OOB candle.
  builder.itemLocations(ZONE.RDAI, 'Heart', 6, 'Heart Refresh')
  // Library candles have Pentagram.
  builder.itemLocations(ZONE.LIB, 'Uncurse', 1, 'Pentagram')
  builder.itemLocations(ZONE.LIB, 'Uncurse', 2, 'Pentagram')
  // Library Card in Entrance Turkey spot.
  builder.itemLocations(ZONE.NO3, 'Turkey', 'Library Card')
  // Toadstool at Entrance Warp switch.
  builder.itemLocations(ZONE.NO3, 'Heart Vessel', 2, 'Toadstool')
  // Heart Refresh at Catacombs library card.
  builder.itemLocations(ZONE.CAT, 'Library Card', 'Heart Refresh')
  // Axe Lord Armor at Spike Breaker.
  builder.itemLocations(ZONE.CAT, 'Spike Breaker', 'Axe Lord Armor')
  // Claymore in vanilla spot.
  builder.itemLocations(ZONE.NO4, 'Claymore', 'Claymore')
  // Manna prism at Cavern Onyx.
  builder.itemLocations(ZONE.NO4, 'Onyx', 'Manna Prism')

  // PROLOGUE REWARDS //
  builder.prologueRewards('Heart Refresh', 'Fire Boomerang')
  builder.prologueRewards('Neutron Bomb', 'Fire Boomerang')
  builder.prologueRewards('Potion', 'Life Apple')

  // RELICS //
  // Relic checks requiring 0 relics.
  builder.lockLocation(RELIC.CUBE_OF_ZOE, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.MERMAN_STATUE, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.BAT_CARD, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.SPIRIT_ORB, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.SOUL_OF_WOLF, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.LEAP_STONE, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.FAERIE_SCROLL, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.FAERIE_CARD, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.JEWEL_OF_OPEN, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.FORM_OF_MIST, [
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.FORM_OF_MIST
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.JEWEL_OF_OPEN + RELIC.SPIRIT_ORB,
    RELIC.SOUL_OF_BAT + RELIC.GRAVITY_BOOTS
      + RELIC.POWER_OF_MIST + RELIC.SOUL_OF_WOLF
      + RELIC.FORM_OF_MIST + RELIC.JEWEL_OF_OPEN,
  ])
  // Relic checks requiring 1 relic.
  builder.lockLocation(RELIC.POWER_OF_MIST, [
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.FORM_OF_MIST + RELIC.SOUL_OF_WOLF,
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.LEAP_STONE + RELIC.GHOST_CARD,
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.LEAP_STONE + RELIC.GRAVITY_BOOTS,
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.SOUL_OF_WOLF + RELIC.GRAVITY_BOOTS,
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.FORM_OF_MIST + RELIC.GRAVITY_BOOTS,
    RELIC.SOUL_OF_BAT + RELIC.JEWEL_OF_OPEN
      + RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST,
  ])
  builder.lockLocation(RELIC.SOUL_OF_BAT, [
    RELIC.JEWEL_OF_OPEN + RELIC.CUBE_OF_ZOE
      + RELIC.FAERIE_SCROLL + RELIC.LEAP_STONE
      + RELIC.GRAVITY_BOOTS + RELIC.FIRE_OF_BAT,
    RELIC.JEWEL_OF_OPEN + RELIC.CUBE_OF_ZOE
      + RELIC.SOUL_OF_WOLF + RELIC.HOLY_SYMBOL
      + RELIC.GRAVITY_BOOTS + RELIC.FIRE_OF_BAT,
    RELIC.JEWEL_OF_OPEN + RELIC.CUBE_OF_ZOE
      + RELIC.SOUL_OF_BAT + RELIC.SOUL_OF_WOLF
      + RELIC.GRAVITY_BOOTS + RELIC.GAS_CLOUD,
    RELIC.JEWEL_OF_OPEN + RELIC.CUBE_OF_ZOE
      + RELIC.SOUL_OF_BAT + RELIC.SOUL_OF_WOLF
      + RELIC.BAT_CARD + RELIC.GHOST_CARD,
    RELIC.JEWEL_OF_OPEN + RELIC.CUBE_OF_ZOE
      + RELIC.SOUL_OF_BAT + RELIC.SOUL_OF_WOLF
      + RELIC.GRAVITY_BOOTS + RELIC.FAERIE_CARD,
    RELIC.JEWEL_OF_OPEN + RELIC.FORM_OF_MIST
      + RELIC.FAERIE_SCROLL + RELIC.HOLY_SYMBOL
      + RELIC.ECHO_OF_BAT + RELIC.FIRE_OF_BAT,
    RELIC.JEWEL_OF_OPEN + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.POWER_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.GAS_CLOUD,
    RELIC.JEWEL_OF_OPEN + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.SPIRIT_ORB
      + RELIC.BAT_CARD + RELIC.GHOST_CARD,
    RELIC.JEWEL_OF_OPEN + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.SWORD_CARD
      + RELIC.DEMON_CARD + RELIC.FAERIE_CARD,
  ])
  builder.lockLocation(RELIC.DEMON_CARD, [
    RELIC.FORM_OF_MIST + RELIC.SOUL_OF_BAT,
    RELIC.SOUL_OF_WOLF + RELIC.SOUL_OF_BAT,
    RELIC.LEAP_STONE + RELIC.SOUL_OF_BAT,
  ])
  builder.lockLocation(RELIC.HOLY_SYMBOL, [
    RELIC.MERMAN_STATUE + RELIC.FAERIE_SCROLL
      + RELIC.SPIRIT_ORB + RELIC.FIRE_OF_BAT,
    RELIC.MERMAN_STATUE + RELIC.SOUL_OF_BAT
      + RELIC.POWER_OF_WOLF + RELIC.SKILL_OF_WOLF,
    RELIC.MERMAN_STATUE + RELIC.SOUL_OF_BAT
      + RELIC.FORCE_OF_ECHO + RELIC.ECHO_OF_BAT,
    RELIC.MERMAN_STATUE + RELIC.POWER_OF_MIST
      + RELIC.GAS_CLOUD + RELIC.SOUL_OF_BAT,
  ])
  builder.lockLocation(RELIC.SKILL_OF_WOLF, [
    RELIC.FORM_OF_MIST + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
    RELIC.SOUL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
  ])
  builder.lockLocation(RELIC.SWORD_CARD, [
    RELIC.FORM_OF_MIST + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
    RELIC.SOUL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_BAT
      + RELIC.JEWEL_OF_OPEN,
  ])
  // First Castle relic checks that require 2+ relics.
  builder.lockLocation(RELIC.ECHO_OF_BAT, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.CUBE_OF_ZOE + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.FIRE_OF_BAT, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.GHOST_CARD, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.POWER_OF_WOLF, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.GRAVITY_BOOTS, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  // Second Castle relic checks before Caverns.
  builder.lockLocation(RELIC.RING_OF_VLAD, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.TOOTH_OF_VLAD, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.HEART_OF_VLAD, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])
  builder.lockLocation(RELIC.RIB_OF_VLAD, [
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_BAT + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.SPIRIT_ORB + RELIC.GHOST_CARD
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SWORD_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.POWER_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SKILL_OF_WOLF + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.FIRE_OF_BAT + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.LEAP_STONE
      + RELIC.GHOST_CARD + RELIC.SOUL_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.SOUL_OF_WOLF + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.FAERIE_CARD
      + RELIC.HEART_OF_VLAD, 
    RELIC.FORM_OF_MIST + RELIC.POWER_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.ECHO_OF_BAT
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.SOUL_OF_WOLF
      + RELIC.SOUL_OF_WOLF + RELIC.FORCE_OF_ECHO
      + RELIC.HEART_OF_VLAD,
    RELIC.GRAVITY_BOOTS + RELIC.FORM_OF_MIST
      + RELIC.SOUL_OF_BAT + RELIC.DEMON_CARD
      + RELIC.HEART_OF_VLAD,
  ])

  // Export.
  const preset = builder.build()
  if (self) {
    const presets = (self.sotnRando || {}).presets || []
    presets.push(preset)
    self.sotnRando = Object.assign(self.sotnRando || {}, {
      presets: presets,
    })
  } else if (!module.parent) {
    console.log(preset.toString())
  } else {
    module.exports = preset
  }
})(typeof(self) !== 'undefined' ? self : null)
