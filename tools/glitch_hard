#!/usr/bin/env node
// Glitch Logic by romscout
// This tool creates a relic location lock string that may require extensive
// glitch knowledge for completion.
// Any% completion is assumed, but all Vlad relics are accessible.
// Usage: tools/glitch [prefix]

// Boilerplate.
const plandomizer = require('../util').plandomizer
const RELIC = require('../constants').RELIC

// Create plandomizer.
const plan = new plandomizer()

// Form of Mist will be early
plan.place(
  RELIC.FORM_OF_MIST
    + RELIC.DEMON_CARD
    + RELIC.SWORD_CARD
    + RELIC.GHOST_CARD
    + RELIC.FAERIE_CARD
    + RELIC.BAT_CARD,
  RELIC.CUBE_OF_ZOE
    + RELIC.SPIRIT_ORB
    + RELIC.SOUL_OF_WOLF
    + RELIC.JEWEL_OF_OPEN
    + RELIC.FAERIE_SCROLL
    + RELIC.LEAP_STONE,
)

// Wolf will be accessible with Form of Mist
plan.place(
  RELIC.SOUL_OF_WOLF
    + RELIC.SPIRIT_ORB
    + RELIC.FAERIE_SCROLL,
  RELIC.FAERIE_CARD
    + RELIC.FORM_OF_MIST
    + RELIC.SOUL_OF_BAT,
)

// Soul of Bat, Power of Mist, Gravity Boots
// will always be in 2nd Castle
plan.place(
  RELIC.SOUL_OF_BAT 
    + RELIC.POWER_OF_MIST 
    + RELIC.GRAVITY_BOOTS
    + RELIC.CUBE_OF_ZOE,
  RELIC.RING_OF_VLAD
    + RELIC.HEART_OF_VLAD
    + RELIC.TOOTH_OF_VLAD
    + RELIC.RIB_OF_VLAD,
)

// Tooth of Vlad will always be at the end of 2nd Castle
plan.place(
  RELIC.TOOTH_OF_VLAD
    + RELIC.EYE_OF_VLAD,
  RELIC.EYE_OF_VLAD
    + RELIC.FORCE_OF_ECHO,
)

// Jewel of Open will always be behind Merman Statue or Galamoth
plan.place(
  RELIC.JEWEL_OF_OPEN
    + RELIC.HEART_OF_VLAD,
  RELIC.HOLY_SYMBOL
    + RELIC.GAS_CLOUD,
)

plan.unlockRemaining()

// Print output.
const prefix = process.argv[2] || ''
console.log(prefix + plan.locks())
